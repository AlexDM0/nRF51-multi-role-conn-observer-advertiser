{"name":"nRF51-multi-role-conn-observer-advertiser","tagline":"Runs an Observer or Advertiser role (timeslot API) with a Connection. Provides a HCI interface to the Observer and Advertiser. Advertiser provides SCAN REQs back to application.","body":"# TIMESLOT ADVERTISER - OBSERVER\r\n\r\nThis project utilizes the Concurrent Multi-protocol Timeslot API in the Nordic\r\nSemiconductor S110 v7.0 SoftDevice for the   nRF51-series micro-controllers to run a\r\nscannable advertiser concurrently with the SoftDevice.\r\n\r\nThis project also contains an example to run a concurrent multi-protocol \r\nobserver concurrently with the Softdevice.\r\n\r\nThe Timeslot advertiser and scanner accept a subset of the HCI command interface to\r\ncontrol various parameters of their behaviour.\r\n\r\nScan Requests that arrive at the advertiser are also sent to the application.\r\nThe scan requests are sent with the address, RSSI, channel and an experimental\r\nlink quality indicator.\r\n\r\nThe experimental link quality indicator that counts the number of packets with\r\nCRC failures and the number packets with successful CRC has been addeed.\r\nThis allows the application to have some awareness of the link quality.\r\nThe link quality is returned by the observer and by the scannable advertiser.\r\n\r\n## Required Software\r\nS110 v7.0 production Softdevice\r\n\r\nnRF51 SDK v6.0\r\n\r\nCopy the folders in this github repo to the s110 folder in the nRF51 SDK\r\n\r\n## Example code\r\n\r\nThe project contains an example of usage, where the Timeslot advertiser runs\r\nwith an advertisement interval of 100ms, along with a SoftDevice powered\r\nconnectable advertiser with an advertisement interval of 150ms. \r\n\r\n## Timeslot Advertiser: Interface\r\n\r\nThe timeslot advertiser interface is based on the Bluetooth standard HCI\r\ninterface, but only implements a small subset of the functionality. All\r\ninterface functions are found in the ts_advertiser.h file under include/.\r\n\r\n### Report queue\r\n\r\nThe timeslot advertiser offers reports related to radio activity to the user.\r\nThe software interrupt indicated by the user in the btle_hci_adv_init()\r\nfunction is triggered when there are available reports in the queue. The user\r\nmay then use the btle_hci_adv_report_get() function to pull reports from the\r\nqueue. The reports contains total valid/invalid packets received and an HCI\r\nbtle_evt_t that indicates what kind of event triggered this report. \r\n\r\nNOTE: The BLE specification does not define any scan report events, so a special event\r\ntype was added for this: BTLE_VS_EVENT_NRF_SCAN_REQUEST_RECEIVED. It contains\r\nan address and address type of the scanner in addition to RSSI and channel.\r\n\r\n### Available function calls:\r\n\r\n__void btle_hci_adv_init(IRQn_Type btle_hci_adv_evt_irq);__\r\n\r\nInitialize the timeslot advertiser. The IRQ parameter decides which software\r\ninterrupt to use for the generated events. For each report the advertiser\r\ngenerates, the selected IRQ flag will be set, and the user may get events from\r\nthe queue using btle_hci_adv_evt_get().\r\n\r\n\r\n***\r\n\r\n__bool btle_hci_adv_report_get(nrf_report_t* report);__\r\n\r\nFunction for getting pending tsa reports. It is recommended to repeat this\r\nfunction until it returns false, as there may be more than one pending report\r\nin the queue.\r\n\r\n***\r\n\r\n__void btle_hci_adv_sd_evt_handler(uint32_t event);__\r\n\r\nSoftDevice event handler for the timeslot advertiser. Takes any timeslot event\r\ngenerated by SoftDevice function sd_evt_get(). \r\n\r\n***\r\n\r\n__void btle_hci_adv_params_set(btle_cmd_param_le_write_advertising_parameters_t* adv_params);__\r\n\r\nSet the advertisement parameters for the timeslot advertiser. See hci/btle.h\r\nfor details about the struct parameter\r\n\r\n***\r\n\r\n__void btle_hci_adv_enable(btle_adv_mode_t adv_enable);__\r\n\r\nEnable or disable advertisement\r\n\r\n***\r\n\r\n__void btle_hci_adv_data_set(btle_cmd_param_le_write_advertising_data_t* adv_data);__\r\n\r\nSet the content of the timeslot advertiser advertisement packets. This does not\r\ninclude any headers or address, as this is controlled internally. To set the\r\nadvertisement address, use the btle_hci_adv_params_set() function.\r\n\r\n***\r\n\r\n__void btle_hci_adv_scan_rsp_data_set(btle_cmd_param_le_write_scan_response_data_t* scan_rsp);__\r\n\r\nSet the content of the timeslot advertiser scan response packet. This is the\r\npacket the beacon will send to respond to external scan requests.  This does\r\nnot include any headers or address, as this is controlled internally.  To set\r\nthe advertisement address, use the btle_hci_adv_params_set() function.\r\n\r\n***\r\n__void btle_hci_adv_whitelist_add(btle_cmd_param_le_add_device_to_whitelist_t* whitelist_device);__\r\n\r\nAdd a scanner to the device whitelist. If the whitelist filter is enabled, only\r\nscanners on this whitelist will be accepted. \r\n\r\nThe filter can be enabled with the btle_hci_adv_params_set() function above.\r\n\r\n***\r\n\r\n__void btle_hci_adv_whitelist_remove(btle_cmd_param_le_remove_device_from_whitelist_t* whitelist_device);__\r\n\r\nRemove a scanner from the device whitelist. If the whitelist filter is enabled,\r\nonly scanners on this whitelist will be accepted. \r\n\r\nThe filter can be enabled with the btle_hci_adv_params_set() function above.\r\n\r\n***\r\n\r\n__void btle_hci_adv_whitelist_flush(void);__\r\n\r\nRemove all scanners from the device whitelist. If the whitelist filter is\r\nenabled, only scanners on this whitelist will be accepted. \r\n\r\nThe filter can be enabled or disabled with the btle_hci_adv_params_set()\r\nfunction above.  Note that this function does not disable the filter\r\nfunctionality.\r\n \r\n***\r\n\r\n## Timeslot Observer: Interface\r\n\r\nThe timeslot Observer interface is also based on the Bluetooth standard HCI\r\ninterface, but only implements a small subset of the functionality. All\r\ninterface functions are found in the nrf_scan.h file under include/.\r\n\r\nThe interface documenation for the Observer will be added in the next release.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}